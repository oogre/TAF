{"version":3,"sources":["meteor://ðŸ’»app/lib/methods/work.js"],"names":[],"mappings":"yfile":"/lib/methods/work.js","sourcesContent":["\"use strict\";\n/*global $ : false */\n/*global _ : false */\n/*global Works : false */\n/*global Router : false */\n/*global Meteor : false */\n/*global Workers : false */\n/*global Matters : false */\n\nMeteor.methods({\n/* WORK */\n\tworkCreator : function(shop, type, rdv, workers, modules){\n\t\tif (! Meteor.userId()) {\n\t\t\treturn new Meteor.Error(\"not-authorized\");\n\t\t}\n\t\tthis.unblock();\n\t\tvar schedular = (function(keys){\n\t\t\tvar obj ={};\n\t\t\t(keys||[]).map(function(key){\n\t\t\t\tobj[key] = [];\n\t\t\t});\n\t\t\treturn obj;\n\t\t}(workers));\n\n\t\tvar result;\n\t\tif(_.isArray(rdv)){\n\t\t\tresult = rdv.map(function(_rdv){\n\t\t\t\treturn Works.insert({\n\t\t\t\t\tshop : shop,\n\t\t\t\t\ttype : type,\n\t\t\t\t\trdv : _rdv,\n\t\t\t\t\tworker_ids : workers,\n\t\t\t\t\tmodules : modules,\n\t\t\t\t\tschedular : schedular\n\t\t\t\t});\n\t\t\t})[0];\n\t\t}else{\n\t\t\tresult = Works.insert({\n\t\t\t\tshop : shop,\n\t\t\t\ttype : type,\n\t\t\t\trdv : rdv,\n\t\t\t\tworker_ids : workers,\n\t\t\t\tmodules : modules,\n\t\t\t\tschedular : schedular\n\t\t\t});\n\t\t}\n\n\t\tif(this.isSimulation){\n\t\t\tRouter.go(\"work.show\", {workId : result});\n\t\t}\n\t\treturn result;\n\t},\n\tworkAddWorker : function(workId, workerId){\n\t\tvar works = Works.findOne(workId);\n\t\tthis.unblock();\n\t\tWorkers.update({\n\t\t\t_id : {\n\t\t\t\t$in : workerId\n\t\t\t}\n\t\t}, {\n\t\t\t$set : {\n\t\t\t\tworking : false\n\t\t\t}\n\t\t});\n\t\treturn Works.update(workId, {\n\t\t\t$set : {\n\t\t\t\tworker_ids : (works.worker_ids||[]).concat(workerId)\n\t\t\t}\n\t\t});\n\t},\n\tworkCloser : function(workId, end){\n\t\tthis.unblock();\n\t\t/* STOP ALL WORKING + SAVE END DATE */\n\t\tvar work = Works.findOne(workId);\n\t\twork.schedular = work.schedular||{};\n\t\tvar workerIds = _.keys(work.schedular);\n\t\tWorkers.update({\n\t\t\t_id : {\n\t\t\t\t$in : workerIds\n\t\t\t}\n\t\t}, {\n\t\t\t$set : {\n\t\t\t\tworking : false\n\t\t\t}\n\t\t});\n\t\t\n\t\tworkerIds\n\t\t.map(function(workerId){\n\t\t\twork.schedular[workerId] = work.schedular[workerId].map(function(schedule){\n\t\t\t\tschedule.stop = schedule.stop || end;\n\t\t\t\treturn schedule;\n\t\t\t});\n\t\t});\n\t\treturn Works.update(work._id, {\n\t\t\t$set : {\n\t\t\t\tschedular : work.schedular,\n\t\t\t\tend : end\n\t\t\t}\n\t\t});\n\t},\n\tworkReopener : function(workId){\n\t\tthis.unblock();\n\t\treturn Works.update(workId, {\n\t\t\t$unset : {\n\t\t\t\tend : \"\",\n\t\t\t\tsignatures : {},\n\t\t\t\traw : false\n\t\t\t}\n\t\t});\n\t},\n\tworkRdvUpadtor : function(workId, date){\n\t\t// Make sure the user is logged in before inserting a task\n\t\tif (! Meteor.userId()) {\n\t\t\treturn new Meteor.Error(\"not-authorized\");\n\t\t}\n\t\tthis.unblock();\n\t\treturn Works.update(workId, {$set : {rdv : date}});\n\t},\n\tworkDestructor : function(id){\n\t\tif (! Meteor.userId()) {\n\t\t\treturn new Meteor.Error(\"not-authorized\");\n\t\t}\n\t\tthis.unblock();\n\t\tWorks.remove(id);\n\t\tif(Meteor.isSimulation){\n\t\t\tRouter.go(\"home\");\n\t\t}\n\t},\n\tworkTaskChecker : function(workId, moduleKey, taskId, value){\n\t\tvar work = Works.findOne(workId);\n\t\twork.modules[moduleKey].tasks.map(function(task, key){\n\t\t\tif(task._id == taskId){\n\t\t\t\tif(_.isString(value)){\n\t\t\t\t\twork.modules[moduleKey].tasks[key].checked = value;\n\t\t\t\t}\n\t\t\t\telse if(task.checked){\n\t\t\t\t\twork.modules[moduleKey].tasks[key].checked = false;\n\t\t\t\t}else{\n\t\t\t\t\twork.modules[moduleKey].tasks[key].checked = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tWorks.update(workId, {\n\t\t\t$set : {\n\t\t\t\tmodules : work.modules\n\t\t\t}\n\t\t});\n\t},\n\tworkModuleTaskUpdator : function(workId, modules){\n\t\tvar work = Works.findOne(workId);\n\t\twork.modules = modules.map(function(new_module){\n\t\t\tvar old_module = _.find(work.modules, function(old_module){\n\t\t\t\treturn old_module.moduleKey == new_module.moduleKey;\n\t\t\t});\n\t\t\tif(old_module){\n\t\t\t\tnew_module.tasks = \tnew_module.tasks\n\t\t\t\t\t\t\t\t\t.map(function(new_task){\n\t\t\t\t\t\t\t\t\t\tvar old_task = \t_\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.find(old_module.tasks, function(old_task){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn old_task._id == new_task._id;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tif(old_task){\n\t\t\t\t\t\t\t\t\t\t\tnew_task.checked = old_task.checked;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn new_task;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn new_module;\n\t\t});\n\t\tWorks.update(workId, {\n\t\t\t$set : {\n\t\t\t\tmodules : work.modules\n\t\t\t}\n\t\t});\n\t},\n\tworkMatter : function(workId, matter, inputReset){\n\t\tvar work = Works.findOne(workId);\n\t\tif(!work){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(!matter._id){\n\t\t\tmatter._id = Matters.insert({\n\t\t\t\tname : matter.name,\n\t\t\t\tunit : matter.unit\n\t\t\t});\n\t\t}\n\n\t\twork.matters = work.matters || [];\n\t\tvar index = _.indexOf(_.pluck(work.matters, \"_id\"), matter._id);\n\t\tif(index<0){\n\t\t\tindex = work.matters.push(matter) - 1;\n\t\t}\n\t\telse{\n\t\t\twork.matters[index].quantity = parseFloat(work.matters[index].quantity)||0;\n\t\t\tmatter.quantity = parseFloat(matter.quantity)||0;\n\t\t\twork.matters[index].quantity += matter.quantity;\n\t\t}\n\t\tWorks.update(workId, {\n\t\t\t$set : {\n\t\t\t\tmatters : work.matters\n\t\t\t}\n\t\t});\n\t\tif(Meteor.isSimulation){\n\t\t\t$(inputReset).val(\"\");\n\t\t}\n\t\treturn ;\n\t},\n\tworkSignature : function(workId, prefix, photo){\n\t\tthis.unblock();\n\t\tvar work = Works.findOne(workId);\n\t\tvar raw = _.isString(photo) || (work && (true === work.raw));\n\t\twork.signatures = work.signatures||{};\n\t\twork.signatures[prefix.toLowerCase()] = photo;\n\t\tWorks.update({_id: workId}, { \n\t\t\t$set : {\n\t\t\t\tsignatures : work.signatures,\n\t\t\t\traw : raw\n\t\t\t} \n\t\t});\n\t}\n});"]}