{"version":3,"sources":["meteor://ðŸ’»app/lib/methods/work.js"],"names":[],"mappings":"yfile":"/lib/methods/work.js","sourcesContent":["\"use strict\";\n/*global $ : false */\n/*global _ : false */\n/*global Works : false */\n/*global Router : false */\n/*global Meteor : false */\n/*global Workers : false */\n/*global Matters : false */\n\nMeteor.methods({\n/* WORK */\n\tworkCreator : function(shop, type, rdv, workers, modules){\n\t\tif (! Meteor.userId()) {\n\t\t\treturn new Meteor.Error(\"not-authorized\");\n\t\t}\n\n\t\tvar worker = Workers.findOne(Meteor.userId());\n\n\t\tvar date = moment().format(\"YYMMDD\");\n\t\tvar workCreatedToday = [date, 0];\n\n\t\tworker.workCreatedToday = (worker.workCreatedToday && worker.workCreatedToday[0]==date) ? worker.workCreatedToday : workCreatedToday;\n\t\t\n\n\t\tvar myId = worker.profile.firstname+\"_\"+worker.profile.lastname+\"_\"+moment().format(\"YYMMDD\");\n\n\t\tthis.unblock();\n\n\n\t\tvar result;\n\t\tif(_.isArray(rdv)){\n\t\t\tresult = rdv.map(function(_rdv){\n\t\t\t\tworker.workCreatedToday[1]++;\n\t\t\t\tWorkers.update(worker._id, {\n\t\t\t\t\t$set : { \n\t\t\t\t\t\tworkCreatedToday : worker.workCreatedToday\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn Works.insert({\n\t\t\t\t\tshop : shop,\n\t\t\t\t\ttype : type,\n\t\t\t\t\trdv : _rdv,\n\t\t\t\t\tworker_ids : workers,\n\t\t\t\t\tmodules : modules,\n\t\t\t\t\tmyId : myId+\"_\"+worker.workCreatedToday[1]\n\t\t\t\t});\n\t\t\t})[0];\n\t\t}else{\n\t\t\tresult = Works.insert({\n\t\t\t\tshop : shop,\n\t\t\t\ttype : type,\n\t\t\t\trdv : rdv,\n\t\t\t\tworker_ids : workers,\n\t\t\t\tmodules : modules,\n\t\t\t\tmyId : myId+\"_\"+worker.workCreatedToday[1]\n\t\t\t});\n\t\t\tworker.workCreatedToday[1]++;\n\t\t\tWorkers.update(worker._id, {\n\t\t\t\t$set : { \n\t\t\t\t\tworkCreatedToday : worker.workCreatedToday\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif(this.isSimulation){\n\t\t\tRouter.go(\"work.show\", {workId : result});\n\t\t}\n\t\treturn result;\n\t},\n\tworkAddWorker : function(workId, workerId){\n\t\tthis.unblock();\n\t\tvar work = Works.findOne(workId);\n\t\tworkerId.map(function(id){\n\t\t\twork.schedule = (work.schedule||[]).map(function(item){\n\t\t\t\tif(item.workerId == id){\n\t\t\t\t\titem.timetable = (item.timetable||[]).map(function(elem){\n\t\t\t\t\t\tif(elem.start && !elem.stop){\n\t\t\t\t\t\t\telem.stop = moment().toISOString()\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn elem;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t});\n\t\t\twork.schedule.push({workerId : id});\n\n\t\t\tWorkers.update(id, {\n\t\t\t\t$set : {\n\t\t\t\t\tworking : false\n\t\t\t\t}\n\t\t\t});\n\n\n\t\t\tWorks.update(workId, {\n\t\t\t\t$set : {\n\t\t\t\t\tschedule : \twork.schedule\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\tworkCloser : function(workId, end){\n\t\tthis.unblock();\n\t\t/* STOP ALL WORKING + SAVE END DATE */\n\t\tvar work = Works.findOne(workId);\n\t\t\n\t\t_\n\t\t.chain(work.schedule || [])\n\t\t.pluck('workerId')\n\t\t.uniq()\n\t\t.map(function(id){\n\t\t\tWorkers.update(id, {\n\t\t\t\t$set : {\n\t\t\t\t\tworking : false\n\t\t\t\t}\n\t\t\t});\n\t\t});\t\t\n\n\t\twork.schedule = (work.schedule||[])\n\t\t\t\t\t\t.map(function(item){\n\t\t\t\t\t\t\titem.timetable = (item.timetable||[]).map(function(elem){\n\t\t\t\t\t\t\t\tif(elem.start && !elem.stop){\n\t\t\t\t\t\t\t\t\telem.stop = end;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn elem;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\treturn item;\n\t\t\t\t\t\t});\n\t\treturn Works.update(work._id, {\n\t\t\t$set : {\n\t\t\t\tschedule : work.schedule,\n\t\t\t\tend : end\n\t\t\t}\n\t\t});\n\t},\n\tworkReopener : function(workId){\n\t\tthis.unblock();\n\t\treturn Works.update(workId, {\n\t\t\t$unset : {\n\t\t\t\tend : \"\",\n\t\t\t\tsignatures : {},\n\t\t\t\traw : false,\n\t\t\t\tmaintenance : \"\",\n\t\t\t\tsummary : \"\"\n\t\t\t}\n\t\t});\n\t},\n\tworkRdvUpadtor : function(workId, date){\n\t\t// Make sure the user is logged in before inserting a task\n\t\tif (! Meteor.userId()) {\n\t\t\treturn new Meteor.Error(\"not-authorized\");\n\t\t}\n\t\tthis.unblock();\n\t\treturn Works.update(workId, {$set : {rdv : date}});\n\t},\n\tworkDestructor : function(id){\n\t\tif (! Meteor.userId()) {\n\t\t\treturn new Meteor.Error(\"not-authorized\");\n\t\t}\n\t\tthis.unblock();\n\n\t\tWorkers.update({\n\t\t\tworking : id\n\t\t}, {\n\t\t\t$set : {\n\t\t\t\tworking : false\n\t\t\t}\n\t\t});\n\n\t\tWorks.remove(id);\n\t\tif(Meteor.isSimulation){\n\t\t\tRouter.go(\"home\");\n\t\t}\n\t},\n\tworkTaskChecker : function(workId, moduleKey, taskId, value){\n\t\tvar work = Works.findOne(workId);\n\t\twork.modules[moduleKey].tasks.map(function(task, key){\n\t\t\tif(task._id == taskId){\n\t\t\t\tif(_.isString(value)){\n\t\t\t\t\twork.modules[moduleKey].tasks[key].checked = value;\n\t\t\t\t}\n\t\t\t\telse if(task.checked){\n\t\t\t\t\twork.modules[moduleKey].tasks[key].checked = false;\n\t\t\t\t}else{\n\t\t\t\t\twork.modules[moduleKey].tasks[key].checked = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tWorks.update(workId, {\n\t\t\t$set : {\n\t\t\t\tmodules : work.modules\n\t\t\t}\n\t\t});\n\t},\n\tworkModuleTaskUpdator : function(workId, modules){\n\t\tvar work = Works.findOne(workId);\n\t\twork.modules = modules.map(function(new_module){\n\t\t\tvar old_module = _.find(work.modules, function(old_module){\n\t\t\t\treturn old_module.moduleKey == new_module.moduleKey;\n\t\t\t});\n\t\t\tif(old_module){\n\t\t\t\tnew_module.tasks = \tnew_module.tasks\n\t\t\t\t\t\t\t\t\t.map(function(new_task){\n\t\t\t\t\t\t\t\t\t\tvar old_task = \t_\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.find(old_module.tasks, function(old_task){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn old_task._id == new_task._id;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tif(old_task){\n\t\t\t\t\t\t\t\t\t\t\tnew_task.checked = old_task.checked;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn new_task;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn new_module;\n\t\t});\n\t\tWorks.update(workId, {\n\t\t\t$set : {\n\t\t\t\tmodules : work.modules\n\t\t\t}\n\t\t});\n\t},\n\tworkMatter : function(workId, matter, inputReset){\n\t\tvar work = Works.findOne(workId);\n\t\tif(!work){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(!matter._id){\n\t\t\tmatter._id = Matters.insert({\n\t\t\t\tname : matter.name,\n\t\t\t\tunit : matter.unit\n\t\t\t});\n\t\t}\n\n\t\twork.matters = work.matters || [];\n\t\tvar index = _.indexOf(_.pluck(work.matters, \"_id\"), matter._id);\n\t\tif(index<0){\n\t\t\tindex = work.matters.push(matter) - 1;\n\t\t}\n\t\telse{\n\t\t\twork.matters[index].quantity = parseFloat(work.matters[index].quantity)||0;\n\t\t\tmatter.quantity = parseFloat(matter.quantity)||0;\n\t\t\twork.matters[index].quantity += matter.quantity;\n\t\t\tif(work.matters[index].quantity == 0){\n\t\t\t\twork.matters.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\tWorks.update(workId, {\n\t\t\t$set : {\n\t\t\t\tmatters : work.matters\n\t\t\t}\n\t\t});\n\t\tif(Meteor.isSimulation){\n\t\t\t$(inputReset).val(\"\");\n\t\t}\n\t\treturn ;\n\t},\n\tworkSignature : function(workId, prefix, photo){\n\t\tthis.unblock();\n\t\tvar work = Works.findOne(workId);\n\t\tvar raw = _.isString(photo) || (work && (true === work.raw));\n\t\twork.signatures = work.signatures||{};\n\t\twork.signatures[prefix.toLowerCase()] = photo;\n\t\tWorks.update({_id: workId}, { \n\t\t\t$set : {\n\t\t\t\tsignatures : work.signatures,\n\t\t\t\traw : raw\n\t\t\t} \n\t\t});\n\t}\n});"]}