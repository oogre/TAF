{"version":3,"sources":["meteor://ðŸ’»app/lib/methods/workers.js"],"names":[],"mappings":"yfile":"/lib/methods/workers.js","sourcesContent":["\"use strict\";\n/*global _ : false */\n/*global $ : false */\n/*global Npm : false */\n/*global HTTP : false */\n/*global Email : false */\n/*global Works : false */\n/*global Router : false */\n/*global Meteor : false */\n/*global Workers : false */\n/*global Accounts : false */\n\n\nMeteor.methods({\n\tworkerUpdator: function (workerid, worker) {\n\t\t// Make sure the user is logged in before inserting a task\n\t\tif (! Meteor.userId()) {\n\t\t\treturn new Meteor.Error(\"not-authorized\");\n\t\t}\n\t\tthis.unblock();\n\t\treturn Workers.update(workerid, {$set : {profile : worker}});\n\t},\n\tworkerDestroyer: function (workerid) {\n\t\t// Make sure the user is logged in before inserting a task\n\t\tif (! Meteor.userId()) {\n\t\t\treturn new Meteor.Error(\"not-authorized\");\n\t\t}\n\t\tthis.unblock();\n\t\treturn Workers.remove(workerid);\n\t},\n\tworkerCreator: function (worker, button) {\n\t\t// Make sure the user is logged in before inserting a task\n\t\tif (! Meteor.userId()) {\n\t\t\treturn new Meteor.Error(\"not-authorized\");\n\t\t}\n\t\tthis.unblock();\n\n\t\tif(Meteor.isServer){\n\t\t\tvar Future = Npm.require(\"fibers/future\");\n\t\t\tvar myFuture = new Future();\n\t\t\t//var url = \"https://passwordwolf.com/api/?upper=off&special=off&length=10&repeat=1\";\n\n\n\n\t\t\t//HTTP.get(url, {\n\t\t\t//\tfollowRedirects : true\n\t\t\t//}, function (error, result) {\n\t\t\t\t//if(error) myFuture.throw(error);\n\t\t\t\t//if(result.statusCode != 200) myFuture.throw(new Meteor.Error(\"statusCode-\"+result.statusCode));\n\t\t\t\t//try{\n\t\t\t\t\t//var body = JSON.parse(result.content);\n\t\t\t\t\tworker.password = \"gdutaf\";\n\n\t\t\t\t\tvar account = Accounts.createUser(worker);\n\n\t\t\t\t\t/*Email.send({\n\t\t\t\t\t\tto: worker.email,\n\t\t\t\t\t\tfrom: \"robot@taf.com\",\n\t\t\t\t\t\tsubject: \"Welcom on TAF\",\n\t\t\t\t\t\ttext: \"GO and connect on TAF. email : \"+worker.email+\" password : \"+worker.password\n\t\t\t\t\t});*/\n\n\t\t\t\t\tmyFuture.return(account);\n\t\t\t\t//}catch(e){\n\t\t\t\t//\tmyFuture.throw(new Meteor.Error(\"statusCode-\"+result.statusCode));\n\t\t\t\t//}\n\t\t\t//});\n\t\t\treturn myFuture.wait();\n\t\t}\n\t\t\n\t\tif(this.isSimulation){\n\t\t\t$(button)\n\t\t\t.removeClass(\"btn-primary\")\n\t\t\t.addClass(\"btn-success\");\n\t\t\tRouter.go(\"home\");\n\t\t}\n\t},\n\tworkerSchedule : function( workId, workerId, action, datetime){\n\t\tthis.unblock();\n\t\tWorks\n\t\t.find({\n\t\t\t$where : function(){\n\t\t\t\treturn _.find(this.schedule, function(item){\n\t\t\t\t\tvar timetable = item.timetable || [];\n\t\t\t\t\treturn item.workerId === workerId && _.last(timetable) && _.last(timetable).start && !_.last(timetable).stop ;\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.fetch()\n\t\t.map(function(work){\n\t\t\tvar schedule = work.schedule || [];\n\t\t\tfor(var k = schedule.length-1 ; k >= 0 ; k -- ){\n\t\t\t\tif(!_.isArray(schedule[k].timetable))continue;\n\t\t\t\tvar timetable = schedule[k].timetable || [];\n\t\t\t\tif(schedule[k].workerId == workerId && _.last(timetable) && _.last(timetable).start && !_.last(timetable).stop){\n\t\t\t\t\tschedule[k].timetable[schedule[k].timetable.length-1].stop = datetime;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tWorks\n\t\t\t.update(work._id, {\n\t\t\t\t$set : {\n\t\t\t\t\tschedule : schedule\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t});\n\t\t/**/\n\n\n\t\t//START WORKER WORKING\n\t\tvar work = Works.findOne(workId);\n\t\tif(!work) return false;\n\t\tvar schedule = work.schedule || [];\n\n\t\tif(action === \"start\"){\n\t\t\tfor(var k = schedule.length-1 ; k >= 0 ; k -- ){\n\t\t\t\tif(schedule[k].workerId === workerId && !schedule[k].start){\n\t\t\t\t\tschedule[k].timetable = schedule[k].timetable || [];\n\t\t\t\t\tschedule[k].timetable.push({start : datetime});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tWorkers.update(workerId, {\n\t\t\t$set : {\n\t\t\t\tworking : action === \"start\" ? workId : false\n\t\t\t}\n\t\t});\n\n\t\tWorks.update(workId, {\n\t\t\t$set : {\n\t\t\t\tschedule : schedule\n\t\t\t}\n\t\t});\n\t\t/**/\n\t}\n});"]}