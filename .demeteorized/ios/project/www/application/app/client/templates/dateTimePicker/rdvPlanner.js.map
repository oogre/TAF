{"version":3,"sources":["meteor://ðŸ’»app/client/templates/dateTimePicker/rdvPlanner.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"/client/templates/dateTimePicker/rdvPlanner.js","sourcesContent":["\"use strict\";\n/*global _ : false */\n/*global $ : false */\n/*global Meteor : false */\n/*global moment : false */\n/*global Session : false */\n/*global Template : false */\n\nTemplate.rdvPlanner.dates = function(template, next){\n\tvar deferred = new $.Deferred();\n\tvalidator(template, function(error, values){\n\t\tif(error) {\n\t\t\tdeferred.reject(error);\n\t\t\treturn next(error);\n\t\t}\n\t\tdeferred.resolve(values);\n\t\treturn next(null, values);\n\t});\n\treturn deferred;\n};\n\nvar validator = function(template, next){\n\tvar firstdate = template.find(\"#firstdate\");// DATE\n\tvar interval = template.find(\"#interval\"); \t// MONTH\n\tvar duration = template.find(\"#duration\"); \t\t\t// YEAR\n\tvar errors = template.find(\".rdvPlanner .has-error\");\n\t\n\t$(errors)\n\t.removeClass(\"has-error\");\n\n\tvar validation = function(element){\n\t\tif(!element.value){\n\t\t\t$(element)\n\t\t\t.parents(\".form-group\")\n\t\t\t.first()\n\t\t\t.addClass(\"has-error\");\n\t\t\treturn true;\n\t\t}\n\t\tif(element.name.match(/date/) && !element.getAttribute(\"data-date-format\")){\n\t\t\t$(element)\n\t\t\t.parents(\".form-group\")\n\t\t\t.first()\n\t\t\t.addClass(\"has-error\");\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\tif(firstdate){\n\t\tif(\tvalidation(firstdate) ||Â validation(interval) ||Â validation(duration)){\n\t\t\treturn next(new Meteor.Error(\"validation-error\"));\n\t\t}\n\n\t\tfirstdate = moment(firstdate.value, firstdate.getAttribute(\"data-date-format\")).hour(\"03\");\n\t\tvar lastdate = moment(firstdate).add(duration.value, \"year\");\n\t\tvar currentDate = _.clone(firstdate);\n\t\tvar dates = [];\n\n\t\twhile(currentDate.isBefore(lastdate)){\n\t\t\tdates.push(currentDate.toISOString());\n\t\t\tcurrentDate.add(interval.value, \"month\");\n\t\t}\n\n\t\treturn next(null, dates);\n\t}else{\n\t\treturn next(null, null);\n\t}\n};\n\nTemplate.rdvPlanner.rendered = function(){\n\t$(\"#firstdate\").datetimepicker({\n\t\ticons: {\n\t\t\ttime: \"fa fa-clock-o\",\n\t\t\tdate: \"fa fa-calendar\",\n\t\t\tup: \"fa fa-arrow-up\",\n\t\t\tdown: \"fa fa-arrow-down\"\n\t\t},\n\t\tlanguage : \"fr\",\n\t\tdefaultDate : moment(Session.get(Meteor.CALENDAR_CONF).defaultDate)\n\n\t});\n};"]}