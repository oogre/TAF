{"version":3,"sources":["meteor://ðŸ’»app/client/templates/work/matter.js"],"names":[],"mappings":"yfile":"/client/templates/work/matter.js","sourcesContent":["\"use strict\";\n/*global _ : false */\n/*global $ : false */\n/*global Units : false */\n/*global Meteor : false */\n/*global Matters : false */\n/*global Tracker : false */\n/*global Session : false */\n/*global Template : false */\n\nvar units = [];\nvar matters = [];\nTemplate.matterselector.helpers({\n\tunits : function(){\n\t\tunits = Units.find({}).fetch();\n\t\treturn units;\n\t},\n\tmatters: function(query, callback){\n\t\tmatters =\tMatters.find({\n\t\t\t\t\t\tname : {\n\t\t\t\t\t\t\t$regex : \".*\"+query.toLowerCase()+\".*\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}).fetch();\n\n\t\tcallback(\tmatters\n\t\t\t\t\t.map(function(it){\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: it.name\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t);\n\t},\n\tinti : function(){\n\t\tvar self = this;\n\t\tTracker.autorun(function () {\n\t\t\tvar matter = Session.get(Meteor.MATTER);\n\t\t\tvar inputReset = \"select[name='unit'], input[name='quantity'], input[name='matter']\";\n\t\t\tif (matter && matter.quantity && matter.name && (matter.unit||matter.unit===\"\") && self && self.work){\n\t\t\t\tvar originId = $(\"select[name='origin']\").val();\n\t\t\t\tvar destinyId = $(\"select[name='destiny']\").val();\n\n\t\t\t\tSession.set(Meteor.MATTER, false);\n\n\t\t\t\tif(originId){\n\t\t\t\t\tMeteor.call(\"matterOriginsTransfert\", {\n\t\t\t\t\t\tworkId : self.work._id,\n\t\t\t\t\t\tquantity : matter.quantity,\n\t\t\t\t\t\tdestinyId : destinyId,\n\t\t\t\t\t\toriginId : originId,\n\t\t\t\t\t\tdateTime : moment().toISOString()\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tMeteor.call(\"workMatter\", self.work._id, matter, inputReset, function(){\n\t\t\t\t\t$(inputReset).val(\"\");\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\torigins : function(){\n\t\tvar matter = Session.get(Meteor.MATTER);\n\t\tif(matter && matter._id){\n\t\t\treturn Origins.find({\n\t\t\t\tmatter : matter._id,\n\t\t\t}).fetch()\n\t\t}\n\t\treturn false;\n\t},\n\tdestins : function(){\n\t\tif(this && this.work && this.work.shop && this.work.shop._id){\n\t\t\tvar shop = Shops.findOne(this.work.shop._id);\n\t\t\tif(shop){\n\t\t\t\treturn shop.modules;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n});\nTemplate.matterselector.destroyed = function(){\nSession.set(Meteor.MATTER, false);\n};\nTemplate.matterselector.rendered = function(){\n\tSession.set(Meteor.MATTER, false);\n\tMeteor.typeahead.inject();\n\t$(\".twitter-typeahead\").addClass(\"form-control\");\n\t$(\".typeahead\")\n\t.css(\"boxShadow\",\"none\")\n\t.first()\n\t.css(\"opacity\", \"0\");\n};\n\nTemplate.matterselector.events({\n\t\"blur input[name='matter']\" : function(event){\n\t\tvar _matter, s_matter, _unit;\n\t\ts_matter = Session.get(Meteor.MATTER)||{};\n\t\ts_matter.name = event.target.value.toLowerCase();\n\t\t_matter =\t_\n\t\t\t\t\t.find(matters, function(matter){\n\t\t\t\t\t\treturn s_matter.name === matter.name;\n\t\t\t\t\t});\n\t\tif(_matter && (_unit = $(\"select[name='unit'] option[value='\"+_matter.unit+\"']\"))) {\n\t\t\t_unit[0].selected = true;\n\t\t\t_unit.parent().attr(\"disabled\", \"disabled\");\n\t\t\tSession.set(Meteor.MATTER, _matter);\n\t\t}\n\t\telse{\n\t\t\tSession.set(Meteor.MATTER, s_matter);\n\t\t\t$(\"select[name='unit']\").removeAttr(\"disabled\");\n\t\t}\n\t},\n\t\"blur input[name='quantity']\" : function(event){\n\t\tvar matter = Session.get(Meteor.MATTER)||{};\n\t\tmatter.quantity = event.target.value.toLowerCase();\n\t\tSession.set(Meteor.MATTER, matter);\n\t},\n\t\"change select[name='unit']\" : function(event){\n\t\tvar matter = Session.get(Meteor.MATTER)||{};\n\t\tmatter.unit = event.target.value.toLowerCase();\n\t\tSession.set(Meteor.MATTER, matter);\n\t},\n\t\"change select.barcode\" : function(event){\n\t\tif(Meteor.isCordova && event.target.value == \"barcode\"){\n\t\t\tcordova.plugins.barcodeScanner.scan(\n\t\t\t\tfunction (result) {\n\t\t\t\t\t$(event.target)\n\t\t\t\t\t.find(\"option\")\n\t\t\t\t\t.each(function(k, elem){\n\t\t\t\t\t\tif($(elem).html() == result.text){\n\t\t\t\t\t\t\t$(event.target).val($(elem).val());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, \n\t\t\t\tfunction (error) {\n\t\t\t\t\talert(\"Scanning failed: \" + error);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n});"]}