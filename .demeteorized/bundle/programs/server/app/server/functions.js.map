{"version":3,"sources":["meteor://ðŸ’»app/server/functions.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"/server/functions.js","sourcesContent":["\"use strict\";\n/*global s : false */\n/*global Npm : false */\n/*global HTTP : false */\n/*global Meteor : false */\n/*global process : false */\n\nMeteor.checkTVA = function(tva){\n\tvar Future = Npm.require(\"fibers/future\");\n\tvar myFuture = new Future();\n\ttva = tva.replace(/\\ |\\./g, \"\");\n\ttva = {\n\t\tcountryCode : tva.substring(0, 2).toUpperCase(),\n\t\tnumero : s.pad(tva.substring(2), 10, \"0\")\n\t};\n\t\n\tvar url = \"http://ec.europa.eu/taxation_customs/vies/viesquer.do?ms=\"+tva.countryCode+\"&iso=\"+tva.countryCode+\"&vat=\"+tva.numero+\"&name=&companyType=&street1=&postcode=&city=&requesterMs=\"+tva.countryCode+\"&requesterIso=\"+tva.countryCode+\"&requesterVat=\"+tva.numero+\"&BtnSubmitVat=Verify\";\n\tHTTP.get(url, {\n\t\tfollowRedirects : true\n\t}, function (error, result) {\n\t\tif(error) myFuture.throw(error);\n\t\tif(result.statusCode != 200) myFuture.throw(new Meteor.Error(\"statusCode-\"+result.statusCode));\n\t\ttry{\n\t\t\tvar body = result.content;\n\t\t\tvar vatResponseFormTable = body.split(\"<table id=\\\"vatResponseFormTable\\\">\")[1].split(\"</table>\")[0];\n\t\t\tvar name = vatResponseFormTable.split(\"<td class=\\\"labelStyle\\\">Name</td>\")[1].split(\"</td>\")[0].split(\"<td>\")[1].trim();\n\t\t\tvar address = vatResponseFormTable.split(\"<td class=\\\"labelStyle\\\">Address</td> \")[1].split(\"</td>\")[0].split(\"<td>\")[1].trim();\n\t\t\tvar zipcode = address.split(\"<br />\")[1].split(\" \")[0].trim();\n\t\t\tvar city = address.split(\"<br />\")[1].split(zipcode)[1].trim();\n\t\t\taddress = address.split(\"<br />\")[0].trim();\n\t\t\tvar street = address.split(/\\d{1,4}/g)[0].trim();\n\t\t\tvar number = address.split(street)[1].trim();\n\t\t\tmyFuture.return({\n\t\t\t\tTVA : tva.countryCode+tva.numero,\n\t\t\t\tname : name,\n\t\t\t\taddress : {\n\t\t\t\t\tstreet : street, \n\t\t\t\t\tnumber : number,\n\t\t\t\t\tzipcode : zipcode,\n\t\t\t\t\tcity : city\n\t\t\t\t}\n\t\t\t});\n\t\t}catch(e){\n\t\t\tmyFuture.throw(new Meteor.Error(\"non_valid_VAT\"));\n\t\t}\n\t});\n\treturn myFuture.wait();\n};\n\nMeteor.geocode = function(addres, next){\n\tvar getGeocodeUrl = \"https://maps.googleapis.com/maps/api/geocode/json?address=[ADDRES]&key=[APIKEY]\";\n\tgetGeocodeUrl = getGeocodeUrl\n\t\t\t\t\t.replace(\"[ADDRES]\", addres)\n\t\t\t\t\t.replace(\"[APIKEY]\", process.env.KEY_GOOGLE);\n\t\t\t\t\t\n\tHTTP.get(getGeocodeUrl, {\n\t\tfollowRedirects : true\n\t}, function (error, result) {\n\t\tif(error) return next(error);\n\t\tif(result.statusCode != 200) return next(new Meteor.Error(\"statusCode-\"+result.statusCode));\n\t\ttry{\n\t\t\tvar body = result.content;\n\t\t\tvar location = JSON.parse(body).results[0].geometry.location;\n\t\t\treturn next(null, location);\n\t\t}catch(e){\n\t\t\treturn next(new Meteor.Error(\"geocode_parsing_error\"));\n\t\t}\n\t});\n};"]}