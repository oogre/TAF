{"version":3,"sources":["meteor://ðŸ’»app/client/templates/work/signature.js"],"names":[],"mappings":"yfile":"/client/templates/work/signature.js","sourcesContent":["\"use strict\";\n/*global _ : false */\n/*global $ : false */\n/*global Meteor : false */\n/*global Session : false */\n/*global Template : false */\n/*global SignaturePad : false */\n\nvar signaturePad = {};\n\nTemplate.workSignature.destroyed = function(){\n\tSession.set(Meteor.SIGNATURE, {});\n};\n\nTemplate.workSignature.rendered = function(){\n\tvar name = this.data.client ? \"Client\" : \"ADF\";\n\n\tvar canvas = $(this.lastNode).find(\"canvas.signature\");\n\tif(canvas[0]){\n\t\tcanvas[0].width = canvas.width();\n\t\tcanvas[0].height = 210;\n\t\tsignaturePad[name] = new SignaturePad(canvas[0], {\n\t\t\tonEnd : function(){\n\t\t\t\tvar signature = Session.get(Meteor.SIGNATURE);\n\t\t\t\tsignature[name] = true;\n\t\t\t\tSession.set(Meteor.SIGNATURE, signature);\n\t\t\t}\n\t\t});\n\t}\n};\n\nTemplate.workSignature.helpers({\n\tname : function(){\n\t\treturn this.client ? \"Client\" : \"Atelier du froid\";\n\t},\n\tdrawn : function(){\n\t\tvar name = this.client ? \"Client\" : \"ADF\";\n\t\tvar signature = Session.get(Meteor.SIGNATURE);\n\t\tif(this && this.work && this.work.signatures && this.work.signatures[name.toLowerCase()]){\n\t\t\tvar image = this.work.signatures[name.toLowerCase()];\n\t\t\tif(_.isString(image) ||Â image.path) return \"disabled\";\n\t\t}\n\t\treturn signature[name] ? \"\" : \"disabled\";\n\t},\n\tsaved : function(){\n\t\tvar name = this.client ? \"Client\" : \"ADF\";\n\t\tif(this && this.work && this.work.signatures && this.work.signatures[name.toLowerCase()]){\n\t\t\tvar image = this.work.signatures[name.toLowerCase()];\n\t\t\tif(_.isString(image)) return image;\n\t\t\tif(image.path) return Meteor.pictureServer+\"/\"+image.path;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nTemplate.workSignature.events({\n\t\"click button.reset\" : function(){\n\t\tvar name = this.client ? \"Client\" : \"ADF\";\n\t\tsignaturePad[name].clear();\n\t\tvar signature = Session.get(Meteor.SIGNATURE);\n\t\tsignature[name] = false;\n\t\tSession.set(Meteor.SIGNATURE, signature);\n\t\treturn false;\n\t},\n\t\"click button.save\" : function(){\n\t\tvar name = this.client ? \"Client\" : \"ADF\";\n\t\tuploadImage(this.work._id, name, signaturePad[name].toDataURL());\n\t\treturn false;\n\t}\n});\n\nfunction uploadImage(workId, prefix, photo){\n\tvar formData = new FormData();\n\tformData.append(\"directoryName\", \"signatures\");\n\tformData.append(\"_id\", workId);\n\tformData.append(\"prefix\", prefix);\n\tformData.append(\"next\", \"workSignature\");\n\t\n\t\n\tif(!Meteor.status().connected){\n\t\tMeteor.call(\"workSignature\", workId, prefix, photo);\n\t\treturn ;\n\t}\n\t\n\tMeteor.b64toBlob(photo, function success(blob) {\n\t\tformData.append(\"file[]\", blob);\n\t\t$.ajax({\n\t\t\turl: \"/upload\",\n\t\t\ttype: \"POST\",\n\t\t\tdata: formData,\n\t\t\tcache: false,\n\t\t\tcontentType: false,\n\t\t\tprocessData: false\n\t\t})\n\t\t.fail(function(){\n\t\t\tMeteor.call(\"workSignature\", workId, prefix, photo);\n\t\t});\n\t}, function error(err){\n\t\tif(err) throw new Meteor.Error(err);\n\t});\n}"]}